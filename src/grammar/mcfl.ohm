MCFL {
  Program
    = SourceElement*

  withIn =

  reserved
    = "let" | "const"
    | "def" | "end" | "do"
    | "run"

  SourceElement
    = Assignment
    | Call
    | Definition
    | Statement

  Statement
    = Block
    | raw
    | SourceElement

  Assignment
    = DefaultAssignment
    | InitialAssignment
    | PrivateAssignment

  PrivateAssignment
    = name ":" name

  InitialAssignment
    = ("let" | "const") name (":" raw)?
    
  DefaultAssignment
    = name "=" value

  Definition
    = "def" name Block
    
  Call (a call)
    = name "(" ListOf<ArgumentInput<withIn>, ","> ")" -- paramaterized
    | name ListOf<ArgumentInput<withIn>, ","> -- optional_paramaterized
    | "run " name -- run
    
  ArgumentInput<guardIn>
    = name
    | raw
    
  Block
    = begin ("as" value)? Statement* close

  begin
    = "do"
    
  close
    = "end"

  raw (a raw literal)
    = "`" (~"`" any)* "`"

  value (a value)
    = number
    | raw

  name  (a name)
    = ~reserved ident
    | raw

  ident (an identifier)
    = (alnum | "_" | ".")+

  number  (a number)
    = digit* "." digit+  -- fract
    | digit+             -- whole
}